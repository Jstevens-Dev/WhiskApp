{"version":3,"sources":["components/Footer/Footer.js","constants/userConstants.js","actions/userActions.js","components/Header/Header.js","screens/LandingPage/LandingPage.js","components/MainScreen.js","constants/recipesConstants.js","actions/recipesActions.js","components/Loading.js","components/ErrorMessage.js","screens/MyRecipes/MyRecipes.js","screens/LoginScreen/LoginScreen.js","screens/RegisterScreen/RegisterScreen.js","screens/CreateRecipe/CreateRecipes.js","screens/SingleRecipe/SingleRecipe.js","screens/AccountScreen/AccountScreen.js","App.js","reportWebVitals.js","store.js","reducers/userReducers.js","reducers/recipesReducers.js","index.js"],"names":["Footer","style","width","position","bottom","display","justifyContent","Container","Row","Col","className","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","login","email","password","dispatch","a","type","config","headers","axios","post","data","payload","localStorage","setItem","JSON","stringify","response","message","register","name","Header","setSearch","useDispatch","userInfo","useSelector","state","userLogin","useEffect","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","Collapse","id","Nav","Form","inline","FormControl","placeholder","onChange","e","target","value","Link","NavDropdown","title","Item","Divider","onClick","removeItem","LandingPage","history","getItem","push","Button","size","MainScreen","children","RECIPES_LIST_REQUEST","RECIPES_LIST_SUCCESS","RECIPES_LIST_FAIL","RECIPES_CREATE_REQUEST","RECIPES_CREATE_SUCCESS","RECIPES_CREATE_FAIL","RECIPES_UPDATE_REQUEST","RECIPES_UPDATE_SUCCESS","RECIPES_UPDATE_FAIL","RECIPES_DELETE_REQUEST","RECIPES_DELETE_SUCCESS","RECIPES_DELETE_FAIL","deleteRecipeAction","getState","Authorization","token","delete","Loading","alignItems","height","Spinner","animation","ErrorMessage","Alert","fontSize","MyRecipes","search","recipeList","loading","recipes","error","successCreate","recipeCreate","success","successUpdate","recipeUpdate","recipeDelete","loadingDelete","errorDelete","successDelete","console","log","useHistory","get","to","marginLeft","marginBottom","reverse","filter","filteredRecipe","toLowerCase","includes","map","recipe","Accordion","Card","margin","color","textDecoration","flex","cursor","alignSelf","as","Text","eventKey","_id","window","confirm","Body","Badge","backgroundColor","category","content","createdAt","substring","LoginScreen","useState","setEmail","setPassword","submitHandler","preventDefault","onSubmit","Group","controlId","Label","Control","RegisterScreen","setName","confirmpassword","setConfirmPassword","setMessage","userRegister","CreateRecipe","setTitle","setContent","setCategory","resetHandler","createRecipeAction","rows","Date","toLocaleDateString","SingleRecipe","match","date","setDate","params","updatedAt","fetching","put","updateRecipeAction","AccountScreen","location","confirmPassword","userUpdate","md","user","varient","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","intialState","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c0f568a3.chunk.js","sourcesContent":["import React from 'react';\nimport {\n    Container,\n    Row,\n    Col,\n} from 'react-bootstrap';\n\nexport const Footer = () => {\n    return (\n        <footer \n            style={{\n                width: \"100%\",\n                position: \"relative\",\n                bottom: 0,\n                display: \"flex\",\n                justifyContent: \"center\",\n            }}\n        >\n            <Container>\n                <Row>\n                    <Col className='text-center py-3'>Copyright &copy; Whisk</Col>\n                </Row>\n            </Container>\n        </footer>\n    );\n};\n\nexport default Footer;","export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\nexport const USER_LOGOUT = \"USER_LOGOUT\";\n\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\n\nexport const USER_UPDATE_REQUEST = \"USER_UPDATE_REQUEST\";\nexport const USER_UPDATE_SUCCESS = \"USER_UPDATE_SUCCESS\";\nexport const USER_UPDATE_FAIL = \"USER_UPDATE_FAIL\";\n","import {\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n} from \"../constants/userConstants\";\nimport axios from \"axios\";\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_LOGIN_REQUEST });\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\n      \"/api/users/login\",\n      { email, password },\n      config\n    );\n\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const logout = () => async (dispatch) => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({ type: USER_LOGOUT });\n};\n\nexport const register = (name, email, password) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_REGISTER_REQUEST });\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\n      \"/api/users\",\n      { name, email, password },\n      config\n    );\n\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updateAccount = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_UPDATE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post(\"/api/users/account\", user, config);\n\n    dispatch({ type: USER_UPDATE_SUCCESS, payload: data });\n\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n","import React, { useEffect } from \"react\";\nimport {\n  Container,\n  Form,\n  FormControl,\n  Nav,\n  Navbar,\n  NavDropdown,\n} from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {} from \"react-router-dom\";\nimport { logout } from \"../../actions/userActions\";\n\nfunction Header({ setSearch }) {\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const logoutHandler = () => {\n    dispatch(logout());\n  };\n\n  useEffect(() => {}, [userInfo]);\n\n  return (\n    <Navbar collapseOnSelect expand=\"lg\" bg=\"primary\" variant=\"dark\">\n      <Container>\n        <Navbar.Brand href=\"/\">Whisk</Navbar.Brand>\n\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"m-auto\">\n            {userInfo && (\n              <Form inline>\n                <FormControl\n                  type=\"text\"\n                  placeholder=\"Search\"\n                  className=\"mr-sm-2\"\n                  onChange={(e) => setSearch(e.target.value)}\n                />\n              </Form>\n            )}\n          </Nav>\n          <Nav>\n            {userInfo ? (\n              <>\n                <Nav.Link href=\"/myrecipes\">My Recipes</Nav.Link>\n                <NavDropdown\n                  title={`${userInfo.name}`}\n                  id=\"collasible-nav-dropdown\"\n                >\n                  <NavDropdown.Item href=\"/account\">\n                    {/* <img\n                      alt=\"\"\n                      src={`${userInfo.pic}`}\n                      width=\"25\"\n                      height=\"25\"\n                      style={{ marginRight: 10 }}\n                    /> */}\n                    My Account\n                  </NavDropdown.Item>\n\n                  <NavDropdown.Divider />\n                  <NavDropdown.Item onClick={logoutHandler}>\n                    Logout\n                  </NavDropdown.Item>\n                </NavDropdown>\n              </>\n            ) : (\n              <Nav.Link href=\"/login\">Login</Nav.Link>\n            )}\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n\nexport default Header;\n","import React, { useEffect } from \"react\";\nimport \"./LandingPage.css\";\nimport { Container, Button, Row } from \"react-bootstrap\";\n\nexport const LandingPage = ({ history }) => {\n  useEffect(() => {\n    const userInfo = localStorage.getItem(\"userInfo\");\n\n    if (userInfo) {\n      history.push(\"/myrecipes\");\n    }\n  }, [history]);\n\n  return (\n    <div className=\"main\">\n      <Container>\n        <Row>\n          <div className=\"intro-text\">\n            <div>\n              <h1 className=\"title\">Welcome to Whisk</h1>\n              <p className=\"subtitle\">\n                All of your recipes together in one place.\n              </p>\n              <div className=\"buttonContainer\">\n                <a href=\"/login\">\n                  <Button size=\"lg\" className=\"landingbutton\">\n                    Login\n                  </Button>\n                </a>\n                <a href=\"/register\">\n                  <Button size=\"lg\" className=\"landingbutton\">\n                    Signup\n                  </Button>\n                </a>\n              </div>\n            </div>\n          </div>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default LandingPage;\n","import React from 'react';\nimport { Container, Row } from 'react-bootstrap';\nimport './MainScreen.css';\n\nconst MainScreen = ({ title, children }) => {\n    return (\n        <div className='mainback'>\n            <Container>\n                <Row>\n                    <div className='page'>\n                        {title && (\n                            <>\n                                <h1 className='heading'>{ title }</h1>\n                                <hr />\n                            </>\n                        )}\n                        {children}\n                    </div>\n                </Row>\n            </Container>\n        </div>\n    );\n};\n\nexport default MainScreen;\n","export const RECIPES_LIST_REQUEST = \"RECIPES_LIST_REQUEST\";\nexport const RECIPES_LIST_SUCCESS = \"RECIPES_LIST_SUCCESS\";\nexport const RECIPES_LIST_FAIL = \"RECIPES_LIST_FAIL\";\n\nexport const RECIPES_CREATE_REQUEST = \"RECIPES_CREATE_REQUEST\";\nexport const RECIPES_CREATE_SUCCESS = \"RECIPES_CREATE_SUCCESS\";\nexport const RECIPES_CREATE_FAIL = \"RECIPES_CREATE_FAIL\";\n\nexport const RECIPES_UPDATE_REQUEST = \"RECIPES_UPDATE_REQUEST\";\nexport const RECIPES_UPDATE_SUCCESS = \"RECIPES_UPDATE_SUCCESS\";\nexport const RECIPES_UPDATE_FAIL = \"RECIPES_UPDATE_FAIL\";\n\nexport const RECIPES_DELETE_REQUEST = \"RECIPES_DELETE_REQUEST\";\nexport const RECIPES_DELETE_SUCCESS = \"RECIPES_DELETE_SUCCESS\";\nexport const RECIPES_DELETE_FAIL = \"RECIPES_DELETE_FAIL\";","import {\n    RECIPES_LIST_REQUEST,\n    RECIPES_LIST_SUCCESS,\n    RECIPES_LIST_FAIL,\n    RECIPES_CREATE_REQUEST,\n    RECIPES_CREATE_SUCCESS,\n    RECIPES_CREATE_FAIL,\n    RECIPES_UPDATE_REQUEST,\n    RECIPES_UPDATE_SUCCESS,\n    RECIPES_UPDATE_FAIL,\n    RECIPES_DELETE_REQUEST,\n    RECIPES_DELETE_SUCCESS,\n    RECIPES_DELETE_FAIL, \n} from \"../constants/recipesConstants\";\n\nimport axios from \"axios\";\n\nexport const listRecipes = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: RECIPES_LIST_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/recipes`, config);\n\n    dispatch({\n      type: RECIPES_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: RECIPES_LIST_FAIL,\n      payload: message,\n    });\n  }\n};\n\nexport const createRecipeAction = (title, content, category) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: RECIPES_CREATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post(\n      `/api/recipes/create`,\n      { title, content, category },\n      config\n    );\n\n    dispatch({\n      type: RECIPES_CREATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: RECIPES_CREATE_FAIL,\n      payload: message,\n    });\n  }\n};\n\nexport const updateRecipeAction = (id, title, content, category) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: RECIPES_UPDATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/recipes/${id}`,\n      { title, content, category },\n      config\n    );\n\n    dispatch({\n      type: RECIPES_UPDATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: RECIPES_UPDATE_FAIL,\n      payload: message,\n    });\n  }\n};\n\nexport const deleteRecipeAction = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: RECIPES_DELETE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.delete(`/api/recipes/${id}`, config);\n\n    dispatch({\n      type: RECIPES_DELETE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: RECIPES_DELETE_FAIL,\n      payload: message,\n    });\n  }\n};","import React from 'react';\nimport { Spinner } from 'react-bootstrap';\n\nconst Loading = ({ size = 100 }) => {\n    return (\n        <div\n            style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                width: \"100%\",\n                height: \"100%\",\n            }}\n        >\n            <Spinner\n                style={{\n                    width: size,\n                    height: size,\n                }}\n                animation=\"border\" \n            />    \n        </div>\n    );\n};\n\nexport default Loading;\n","import React from 'react';\nimport { Alert } from 'react-bootstrap';\n\nconst ErrorMessage = ({ variant = \"info\", children }) => {\n    return (\n        <Alert variant={variant} style={{ fontSize: 20 }}>\n            <strong>{children}</strong>\n        </Alert>\n    );\n};\n\nexport default ErrorMessage;\n","import React from 'react';\nimport MainScreen from '../../components/MainScreen';\nimport { useEffect } from 'react';\nimport { Accordion, Badge, Button, Card } from 'react-bootstrap';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector  } from \"react-redux\";\nimport { listRecipes } from '../../actions/recipesActions';\nimport { deleteRecipeAction } from '../../actions/recipesActions';\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\n\nconst MyRecipes = ({ search }) => {\n\n    const dispatch = useDispatch();\n    const recipeList = useSelector((state) => state.recipeList);\n    const { loading, recipes, error } = recipeList;\n\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const recipeCreate = useSelector((state) => state.recipeCreate);\n    const { success: successCreate } = recipeCreate;\n\n    const recipeUpdate = useSelector((state) => state.recipeUpdate);\n    const { success: successUpdate } = recipeUpdate;\n\n    const recipeDelete = useSelector((state) => state.recipeDelete);\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = recipeDelete;\n\n    const deleteHandler = (id) => {\n        if (window.confirm(\"Are you sure?\")) {\n            dispatch(deleteRecipeAction(id));\n        }\n    };\n\n    console.log(recipes);\n\n    const history = useHistory();\n\n    useEffect(() => {\n        dispatch(listRecipes());\n\n        if (!userInfo) {\n            history.push(\"/\");\n        }\n    }, [dispatch, history, userInfo, successCreate, successUpdate, successDelete]);\n\n\n    return (\n        <MainScreen title={`Welcome Back ${userInfo.name}`}>\n            <Link to='createrecipe'>\n                <Button style={{ marginLeft:10, marginBottom: 6 }} size='lg'>\n                    Create New Recipe\n                </Button>\n            </Link>\n            {errorDelete && (\n                <ErrorMessage variant=\"danger\">{errorDelete}</ErrorMessage>\n            )}\n            {loadingDelete && <Loading />}\n            {error && <ErrorMessage variant='danger'>{error}</ErrorMessage>}\n            {loading && <Loading />}\n            {recipes?.reverse().filter(filteredRecipe => (\n                filteredRecipe.title.toLowerCase().includes(search.toLowerCase())\n            )).map((recipe) => ( // .reverse() is so new recipes show at the top\n                <Accordion key={ recipe._id }>\n                    <Card style={{ margin: 10 }}>\n                        <Card.Header style={{ display: \"flex\" }}>\n                            <span\n                                style={{\n                                    color: \"black\",\n                                    textDecoration: \"none\",\n                                    flex: 1,\n                                    cursor: \"pointer\",\n                                    alignSelf: \"center\",\n                                    fontSize: 18,\n                                }}\n                            >\n                                <Accordion.Toggle as={Card.Text} variant=\"link\" eventKey=\"0\">\n                                    {recipe.title}\n                                </Accordion.Toggle>\n                            </span>\n                            <div>\n                                <Button href={`/recipe/${recipe._id}`}>Edit</Button>\n                                <Button variant=\"danger\" className=\"mx-2\" onClick={()=>deleteHandler(recipe._id)}>Delete</Button>\n                            </div>\n                        </Card.Header>\n                        <Accordion.Collapse eventKey=\"0\">\n                            <Card.Body>\n                                <h4>\n                                    <Badge variant='success' style={{\n                                        backgroundColor: \"#78c2ad\",\n                                    }}>\n                                        Category - { recipe.category }\n                                    </Badge>\n                                </h4>\n                                <blockquote className=\"blockquote mb-0\">\n                                    <p>\n                                        { recipe.content }\n                                    </p>\n                                    <footer className=\"blockquote-footer\">\n                                        Created On{\" \"}\n                                        <cite title=\"Source Title\">\n                                            {recipe.createdAt.substring(0, 10)}\n                                        </cite>\n                                    </footer>\n                                </blockquote>\n                            </Card.Body>\n                        </Accordion.Collapse>\n                    </Card>\n                </Accordion>\n            ))}\n        </MainScreen>\n    );\n};\n\nexport default MyRecipes;\n","import React, { useState, useEffect } from 'react';\nimport MainScreen from '../../components/MainScreen';\nimport { Button, Form, Row, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport './LoginScreen.css';\nimport Loading from '../../components/Loading';\nimport ErrorMessage from '../../components/ErrorMessage';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login } from '../../actions/userActions';\n\nconst LoginScreen = ({ history }) => {\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const dispatch = useDispatch();\n\n    const userLogin = useSelector((state) => state.userLogin);\n    const { loading, error, userInfo } = userLogin;\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push('/myrecipes');\n        }\n    }, [history, userInfo]);\n\n    const submitHandler = async (e) => {\n        e.preventDefault();\n\n        dispatch(login(email, password));\n    };\n\n    return (\n        <MainScreen title=\"LOGIN\">\n            <div className=\"loginContainer\">\n                {error && <ErrorMessage variant=\"danger\">{ error }</ErrorMessage>}\n                {loading && <Loading />}\n                <Form onSubmit={submitHandler}>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                    <Form.Label>Email address</Form.Label>\n                    <Form.Control \n                        type=\"email\"\n                        value={email} \n                        placeholder=\"Enter email\"\n                        onChange={(e) => setEmail(e.target.value)} \n                    />\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control \n                        type=\"password\"\n                        value={password} \n                        placeholder=\"Password\"\n                        onChange={(e) => setPassword(e.target.value)}  \n                    />\n                </Form.Group>\n\n                <Button variant=\"primary\" type=\"submit\">\n                    Submit\n                </Button>\n                </Form>\n                <Row>\n                    <Col>\n                        New Customer ? <Link to=\"/register\">Register Here</Link>\n                    </Col>\n                </Row>\n            </div>\n        </MainScreen>\n    );\n};\n\nexport default LoginScreen;\n","import React, { useEffect, useState } from 'react';\nimport MainScreen from '../../components/MainScreen';\nimport ErrorMessage from '../../components/ErrorMessage';\nimport Loading from '../../components/Loading';\nimport { Button, Col, Form, Row } from 'react-bootstrap';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { register } from '../../actions/userActions';\n\n\nconst RegisterScreen = () => {\n\n    const [email, setEmail] = useState(\"\");\n    const [name, setName] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmpassword, setConfirmPassword] = useState(\"\");\n    const [message, setMessage] = useState(null);\n\n    const dispatch = useDispatch();\n\n    const userRegister = useSelector((state) => state.userRegister);\n    const { loading, error, userInfo } = userRegister;\n\n    const history = useHistory();\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(\"/myrecipes\");\n        }\n    }, [history, userInfo]);\n\n    const submitHandler = async (e) => {\n        e.preventDefault();\n\n        if (password !== confirmpassword) {\n            setMessage('Passwords do not match.')\n        } else {\n            dispatch(register(name, email, password));\n        }\n    };\n\n    return (\n        <MainScreen title=\"REGISTER\">\n            <div className=\"loginContainer\">\n                {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n                {message && <ErrorMessage variant=\"danger\">{message}</ErrorMessage>}\n                {loading && <Loading />}\n                <Form onSubmit={submitHandler}>\n                <Form.Group controlId=\"name\">\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control\n                    type=\"name\"\n                    value={name}\n                    placeholder=\"Enter name\"\n                    onChange={(e) => setName(e.target.value)}\n                    />\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>Email address</Form.Label>\n                    <Form.Control\n                    type=\"email\"\n                    value={email}\n                    placeholder=\"Enter email\"\n                    onChange={(e) => setEmail(e.target.value)}\n                    />\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                    type=\"password\"\n                    value={password}\n                    placeholder=\"Password\"\n                    onChange={(e) => setPassword(e.target.value)}\n                    />\n                </Form.Group>\n\n                <Form.Group controlId=\"confirmPassword\">\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control\n                    type=\"password\"\n                    value={confirmpassword}\n                    placeholder=\"Confirm Password\"\n                    onChange={(e) => setConfirmPassword(e.target.value)}\n                    />\n                </Form.Group>\n\n                <Button variant=\"primary\" type=\"submit\">\n                    Register\n                </Button>\n                </Form>\n                <Row className=\"py-3\">\n                <Col>\n                    Have an Account ? <Link to=\"/login\">Login</Link>\n                </Col>\n                </Row>\n            </div>\n        </MainScreen>\n    );\n};\n\nexport default RegisterScreen;\n","import React, { useEffect, useState } from \"react\";\nimport MainScreen from \"../../components/MainScreen\";\nimport { Button, Card, Form } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createRecipeAction } from \"../../actions/recipesActions\";\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport ReactMarkdown from \"react-markdown\";\n\nfunction CreateRecipe({ history }) {\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const recipeCreate = useSelector((state) => state.recipeCreate);\n  const { loading, error, recipe } = recipeCreate;\n\n  console.log(recipe);\n\n  const resetHandler = () => {\n    setTitle(\"\");\n    setCategory(\"\");\n    setContent(\"\");\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(createRecipeAction(title, content, category));\n    if (!title || !content || !category) return;\n\n    resetHandler();\n    history.push(\"/myrecipes\");\n  };\n\n  useEffect(() => {}, []);\n\n  return (\n    <MainScreen title=\"Create a Recipe\">\n      <Card>\n        <Card.Header>Create a new Recipe</Card.Header>\n        <Card.Body>\n          <Form onSubmit={submitHandler}>\n            {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n            <Form.Group controlId=\"title\">\n              <Form.Label>Title</Form.Label>\n              <Form.Control\n                type=\"title\"\n                value={title}\n                placeholder=\"Enter the title\"\n                onChange={(e) => setTitle(e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"content\">\n              <Form.Label>Content</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                value={content}\n                placeholder=\"Enter the content\"\n                rows={4}\n                onChange={(e) => setContent(e.target.value)}\n              />\n            </Form.Group>\n            {content && (\n              <Card>\n                <Card.Header>Recipe Preview</Card.Header>\n                <Card.Body>\n                  <ReactMarkdown>{content}</ReactMarkdown>\n                </Card.Body>\n              </Card>\n            )}\n\n            <Form.Group controlId=\"content\">\n              <Form.Label>Category</Form.Label>\n              <Form.Control\n                type=\"content\"\n                value={category}\n                placeholder=\"Enter the Category\"\n                onChange={(e) => setCategory(e.target.value)}\n              />\n            </Form.Group>\n            {loading && <Loading size={50} />}\n            <Button type=\"submit\" variant=\"primary\">\n              Create Recipe\n            </Button>\n            <Button className=\"mx-2\" onClick={resetHandler} variant=\"danger\">\n              Reset Feilds\n            </Button>\n          </Form>\n        </Card.Body>\n\n        <Card.Footer className=\"text-muted\">\n          Creating on - {new Date().toLocaleDateString()}\n        </Card.Footer>\n      </Card>\n    </MainScreen>\n  );\n}\n\nexport default CreateRecipe;","import React, { useEffect, useState } from \"react\";\nimport MainScreen from \"../../components/MainScreen\";\nimport axios from \"axios\";\nimport { Button, Card, Form } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteRecipeAction, updateRecipeAction } from \"../../actions/recipesActions\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport Loading from \"../../components/Loading\";\nimport ReactMarkdown from \"react-markdown\";\n\nfunction SingleRecipe({ match, history }) {\n  const [title, setTitle] = useState();\n  const [content, setContent] = useState();\n  const [category, setCategory] = useState();\n  const [date, setDate] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const recipeUpdate = useSelector((state) => state.recipeUpdate);\n  const { loading, error } = recipeUpdate;\n\n  const recipeDelete = useSelector((state) => state.recipeDelete);\n  const { loading: loadingDelete, error: errorDelete } = recipeDelete;\n\n  const deleteHandler = (id) => {\n    if (window.confirm(\"Are you sure?\")) {\n      dispatch(deleteRecipeAction(id));\n    }\n    history.push(\"/myrecipes\");\n  };\n\n\n  useEffect(() => {\n    const fetching = async () => {\n      const { data } = await axios.get(`/api/recipes/${match.params.id}`);\n\n      setTitle(data.title);\n      setContent(data.content);\n      setCategory(data.category);\n      setDate(data.updatedAt);\n    };\n\n    fetching();\n  }, [match.params.id, date]);\n\n  const resetHandler = () => {\n    setTitle(\"\");\n    setCategory(\"\");\n    setContent(\"\");\n  };\n\n  const updateHandler = (e) => {\n    e.preventDefault();\n    dispatch(updateRecipeAction(match.params.id, title, content, category));\n    if (!title || !content || !category) return;\n\n    resetHandler();\n    history.push(\"/myrecipes\");\n  };\n\n  return (\n    <MainScreen title=\"Edit Recipe\">\n      <Card>\n        <Card.Header>Edit your Recipe</Card.Header>\n        <Card.Body>\n          <Form onSubmit={updateHandler}>\n            {loadingDelete && <Loading />}\n            {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n            {errorDelete && (\n              <ErrorMessage variant=\"danger\">{errorDelete}</ErrorMessage>\n            )}\n            <Form.Group controlId=\"title\">\n              <Form.Label>Title</Form.Label>\n              <Form.Control\n                type=\"title\"\n                placeholder=\"Enter the title\"\n                value={title}\n                onChange={(e) => setTitle(e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"content\">\n              <Form.Label>Content</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                placeholder=\"Enter the content\"\n                rows={4}\n                value={content}\n                onChange={(e) => setContent(e.target.value)}\n              />\n            </Form.Group>\n            {content && (\n              <Card>\n                <Card.Header>Recipe Preview</Card.Header>\n                <Card.Body>\n                  <ReactMarkdown>{content}</ReactMarkdown>\n                </Card.Body>\n              </Card>\n            )}\n\n            <Form.Group controlId=\"content\">\n              <Form.Label>Category</Form.Label>\n              <Form.Control\n                type=\"content\"\n                placeholder=\"Enter the Category\"\n                value={category}\n                onChange={(e) => setCategory(e.target.value)}\n              />\n            </Form.Group>\n            {loading && <Loading size={50} />}\n            <Button variant=\"primary\" type=\"submit\">\n              Update Recipe\n            </Button>\n            <Button\n              className=\"mx-2\"\n              variant=\"danger\"\n              onClick={() => deleteHandler(match.params.id)}\n            >\n              Delete Recipe\n            </Button>\n          </Form>\n        </Card.Body>\n\n        <Card.Footer className=\"text-muted\">\n          Updated on - {date.substring(0, 10)}\n        </Card.Footer>\n      </Card>\n    </MainScreen>\n  );\n}\n\nexport default SingleRecipe;","import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport MainScreen from \"../../components/MainScreen\";\nimport \"./AccountScreen.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateAccount } from \"../../actions/userActions\";\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\n\nconst AccountScreen = ({ location, history }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userUpdate = useSelector((state) => state.userUpdate);\n  const { loading, error, success } = userUpdate;\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/\");\n    } else {\n      setName(userInfo.name);\n      setEmail(userInfo.email);\n    }\n  }, [history, userInfo]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    if (password === confirmPassword) {\n      dispatch(updateAccount({ name, email, password }));\n    }\n  };\n\n  return (\n    <MainScreen title=\"EDIT ACCOUNT\">\n      <div>\n        <Row className=\"accountContainer\">\n          <Col md={6}>\n            <Form onSubmit={submitHandler}>\n              {loading && <Loading />}\n              {success && (\n                <ErrorMessage variant=\"success\">\n                  Updated Successfully\n                </ErrorMessage>\n              )}\n              {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n              <Form.Group controlId=\"name\">\n                <Form.Label>Name</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter Name\"\n                  value={name}\n                  onChange={(e) => setName(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n              <Form.Group controlId=\"email\">\n                <Form.Label>Email Address</Form.Label>\n                <Form.Control\n                  type=\"email\"\n                  placeholder=\"Enter Email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n              <Form.Group controlId=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Enter Password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n              <Form.Group controlId=\"confirmPassword\">\n                <Form.Label>Confirm Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Confirm Password\"\n                  value={confirmPassword}\n                  onChange={(e) => setConfirmPassword(e.target.value)}\n                ></Form.Control>\n              </Form.Group>{\" \"}\n              <Button type=\"submit\" varient=\"primary\">\n                Update\n              </Button>\n            </Form>\n          </Col>\n          <Col\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          ></Col>\n        </Row>\n      </div>\n    </MainScreen>\n  );\n};\n\nexport default AccountScreen;\n","import \"./App.css\";\nimport Footer from \"./components/Footer/Footer\";\nimport Header from \"./components/Header/Header\";\nimport LandingPage from \"./screens/LandingPage/LandingPage\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport MyRecipes from \"./screens/MyRecipes/MyRecipes\";\nimport LoginScreen from \"./screens/LoginScreen/LoginScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen/RegisterScreen\";\nimport CreateRecipe from \"./screens/CreateRecipe/CreateRecipes\";\nimport SingleRecipe from \"./screens/SingleRecipe/SingleRecipe\";\nimport AccountScreen from \"./screens/AccountScreen/AccountScreen\";\nimport { useState } from \"react\";\n\nconst App = () => {\n  const [search, setSearch] = useState(\"\");\n  console.log(search);\n\n  return (\n    <BrowserRouter>\n      <Header setSearch={setSearch} />\n      <main>\n        <Route path=\"/\" component={LandingPage} exact />\n        <Route path=\"/login\" component={LoginScreen} exact />\n        <Route path=\"/account\" component={AccountScreen} exact />\n        <Route path=\"/register\" component={RegisterScreen} exact />\n        <Route path=\"/createrecipe\" component={CreateRecipe} exact />\n        <Route path=\"/recipe/:id\" component={SingleRecipe} exact />\n        <Route\n          path=\"/myrecipes\"\n          component={() => <MyRecipes search={search} />}\n        />\n      </main>\n      <Footer />\n    </BrowserRouter>\n  );\n};\n\n// This is not JS! This is JSX:\n/*\nfunction App() {\n  const hello = 1;\n\n  return (\n    <h1 className=\"App\">Hello World {hello}</h1>\n  );\n}\n*/\n\n// Could also disply the same thing with this statement:\n// const App = () => <h1  className=\"App\">Hello World {hello}</h1>;\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userUpdateReducer,\n} from \"./reducers/userReducers\";\nimport {\n  recipeCreateReducer,\n  recipeDeleteReducer,\n  recipeListReducer,\n  recipeUpdateReducer,\n} from \"./reducers/recipesReducers\";\n\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userUpdate: userUpdateReducer,\n  recipeList: recipeListReducer,\n  recipeCreate: recipeCreateReducer,\n  recipeUpdate: recipeUpdateReducer,\n  recipeDelete: recipeDeleteReducer,\n});\n\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : null;\n\nconst intialState = {\n  userLogin: { userInfo: userInfoFromStorage },\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  intialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n} from \"../constants/userConstants\";\n\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return { loading: true };\n    case USER_LOGIN_SUCCESS:\n      return { loading: false, userInfo: action.payload };\n    case USER_LOGIN_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_LOGOUT:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const userRegisterReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return { loading: true };\n    case USER_REGISTER_SUCCESS:\n      return { loading: false, userInfo: action.payload };\n    case USER_REGISTER_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const userUpdateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_UPDATE_REQUEST:\n      return { loading: true };\n    case USER_UPDATE_SUCCESS:\n      return { loading: false, userInfo: action.payload, success: true };\n    case USER_UPDATE_FAIL:\n      return { loading: false, error: action.payload, success: false };\n    default:\n      return state;\n  }\n};\n","import {\n    RECIPES_LIST_REQUEST,\n    RECIPES_LIST_SUCCESS,\n    RECIPES_LIST_FAIL,\n    RECIPES_CREATE_REQUEST,\n    RECIPES_CREATE_SUCCESS,\n    RECIPES_CREATE_FAIL,\n    RECIPES_UPDATE_REQUEST,\n    RECIPES_UPDATE_SUCCESS,\n    RECIPES_UPDATE_FAIL,\n    RECIPES_DELETE_REQUEST,\n    RECIPES_DELETE_SUCCESS,\n    RECIPES_DELETE_FAIL,  \n} from \"../constants/recipesConstants\";\n\nexport const recipeListReducer = (state = { recipes: [] }, action) => {\n  switch (action.type) {\n    case RECIPES_LIST_REQUEST:\n      return { loading: true };\n    case RECIPES_LIST_SUCCESS:\n      return { loading: false, recipes: action.payload };\n    case RECIPES_LIST_FAIL:\n      return { loading: false, error: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport const recipeCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case RECIPES_CREATE_REQUEST:\n      return { loading: true };\n    case RECIPES_CREATE_SUCCESS:\n      return { loading: false, success: true };\n    case RECIPES_CREATE_FAIL:\n      return { loading: false, error: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport const recipeUpdateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case RECIPES_UPDATE_REQUEST:\n      return { loading: true };\n    case RECIPES_UPDATE_SUCCESS:\n      return { loading: false, success: true };\n    case RECIPES_UPDATE_FAIL:\n      return { loading: false, error: action.payload, success: false };\n\n    default:\n      return state;\n  }\n};\n\nexport const recipeDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case RECIPES_DELETE_REQUEST:\n      return { loading: true };\n    case RECIPES_DELETE_SUCCESS:\n      return { loading: false, success: true };\n    case RECIPES_DELETE_FAIL:\n      return { loading: false, error: action.payload, success: false };\n\n    default:\n      return state;\n  }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}